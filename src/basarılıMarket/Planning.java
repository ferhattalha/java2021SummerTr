package basarýlýMarket;

public class Planning {

	
	/*
    1) Ürünler (String) ve ürün fiyatlari(double) için ayri ayri list oluþturulmali.
    list ler class levelde omali cunku: main metod harici diger metodlarda kullanýlacak
    Listenen urunleri bir method() ile kullanýcýya gösterilmeli  yazdiran bir method olmali
     bu method bir cikti vermeyecegi ve sadece println calisagi icin return type void prmtsiz olmali.
    method --> public static void urunListele(){for, println(i+urun+fiyat)}
    2)
    scanner class'indan obj creat edilmeli. urunListele() method call edilerek kullanýcý ekranýna
    urun listesi gösterilmeli.kullanýcýdan urun kodu ve urun miktari istenmeli(println)
    int urunNo= kullanicinin girdigi urun kodu atanmali
    double kg= kullanicinin girdigi urun miktari kg atanmali
    3)musteri için alisveris sepeti olusturulmali. sepetUrunler list(String) sepetKg list(double)
    sepetFiyat list(double)
    public static void sepeteEkle(int urunKodu, double kg){sepetFiyat=urunFiyati*kg__list(double)}
    her sepet alisverisinden sonra olusan sepet fiyatini toplLAYAN BÝR PRÝMÝTÝVE (double) toplamFiyat olusturlmali
  toplamFiyat+=sepetFiyati
  4) sepete eklenen urunler miktari toplamFiyati vs sepetin son durumunu hesaplatip yazdirilimali ki
  kullanýcý devem etmeyeceiðni sorabilelim.
   public static double(toplamFiyat) sepetYazdir(){println(urunler+ fiyat+kg)}
   5) kullanýcýya alisverise devam edip etmecegi sorulmali.kullanici cevabi:boolean(true/false) String(e/h) int (1/0))
   cevap verisine gore islem akisi icin  if kontrolu olmali--> cevap vet ise tum ýslemler bastan tekrar edilmeli
   do-While(cevap)--cevap evet ise "do" hayýrsa alisveris bitirilmeli odeme talep edilmeli.
   6) public static void odeme(println(double toplamFiyat){println()}
     */
}

